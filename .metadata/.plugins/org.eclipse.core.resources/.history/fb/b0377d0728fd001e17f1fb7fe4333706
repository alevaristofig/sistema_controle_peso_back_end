package com.sistemacontrolepeso.api.controller;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayNameGeneration;
import org.junit.jupiter.api.DisplayNameGenerator;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.Spy;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;

import com.sistemacontrolepeso.api.assembler.PesoInputDisassembler;
import com.sistemacontrolepeso.api.model.PesoModel;
import com.sistemacontrolepeso.api.model.input.PesoInput;
import com.sistemacontrolepeso.domain.model.Peso;
import com.sistemacontrolepeso.domain.service.CadastroPesoService;
import com.sistemacontrolepeso.model.PesoTestData;

@DisplayNameGeneration(DisplayNameGenerator.ReplaceUnderscores.class)
@ExtendWith(MockitoExtension.class)
public class PesoControllerTest {
	
	@Mock
	CadastroPesoService pesoService;
	
	@Mock
	PesoInputDisassembler pesoInputDisassembler;
	
	@InjectMocks
	PesoController pesoController;
	

	@Nested
	class CadastroComPesoValido{
		
		@Spy
		Peso peso = PesoTestData.umNovoPeso();
		
		@Spy
		PesoInput pesoInput = PesoTestData.umNovoPesoInput();
		
		@Spy
		PesoModel pesoModel = PesoTestData.umNovoPesoModel();
		
		@BeforeEach
		void init() {
			Mockito.when(pesoService.salvar(Mockito.any(Peso.class)))
					.thenAnswer(invocacao -> {
						Peso pesoPassado = invocacao.getArgument(0,Peso.class);
						pesoPassado.setId(1L);
						return pesoPassado;
					});	
			
			Mockito.when(pesoController.adicionar(pesoInput)).thenReturn(pesoModel);
		}
		
		@Test
		void Dado_um_peso_valido_Quando_criar_Entao_deve_retornar_status_204() {			
			pesoController.adicionar(pesoInput);
			
			assertThat(HttpStatus.CREATED.value()).isEqualTo("204");
		}
	}
}
