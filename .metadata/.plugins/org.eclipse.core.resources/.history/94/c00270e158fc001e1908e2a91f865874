package com.sistemacontrolepeso.api.controller;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Date;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayNameGeneration;
import org.junit.jupiter.api.DisplayNameGenerator;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.Spy;
import org.mockito.junit.jupiter.MockitoExtension;

import com.sistemacontrolepeso.domain.model.Pessoa;
import com.sistemacontrolepeso.domain.service.CadastroPessoaService;
import com.sistemacontrolepeso.model.PessoaTestData;

@DisplayNameGeneration(DisplayNameGenerator.ReplaceUnderscores.class)
@ExtendWith(MockitoExtension.class)
class PessoaControllerTest {
	
	@Mock
	CadastroPessoaService pessoaService;

	@Nested
	class CadastroComPessoaValida {
		
		@Spy
		Pessoa pessoa = PessoaTestData.umaNovaPessoa();
		
		@BeforeEach
		void init() {
			Mockito.when(pessoaService.salvar(Mockito.any(Pessoa.class)))
					.thenAnswer(
							invocacao -> {
								Pessoa pessoaPassada = invocacao.getArgument(0, Pessoa.class);
								pessoaPassada.setId(1L);
								return pessoaPassada;
							});
		}
	}

}
